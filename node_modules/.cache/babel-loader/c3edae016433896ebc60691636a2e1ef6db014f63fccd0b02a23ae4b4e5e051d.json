{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\slsmi\\\\GitHub\\\\user-input-react\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n    setEnteredNameIsValid(true);\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n    nameInputRef.current.value = \"\";\n    setEnteredName(\"\");\n  };\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = !nameInputIsInvalid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n};\n_s(SimpleInput, \"rzssK21dFRq2ebNqydyxQX3pi1I=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useRef","useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","nameInputRef","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","enteredNameTouched","setEnteredNameTouched","nameInputChangeHandler","event","target","value","trim","nameInputBlurHandler","formSubmissionHandler","preventDefault","console","log","enteredValue","current","nameInputIsInvalid","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","id","onChange","onBlur","_c","$RefreshReg$"],"sources":["C:/Users/slsmi/GitHub/user-input-react/src/components/SimpleInput.js"],"sourcesContent":["import { useRef, useState } from \"react\";\n\nconst SimpleInput = props => {\n\tconst nameInputRef = useRef();\n\tconst [enteredName, setEnteredName] = useState(\"\");\n\tconst [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n\tconst nameInputChangeHandler = event => {\n\t\tsetEnteredName(event.target.value);\n\n    if (enteredName.trim() === \"\") {\n\t\t\tsetEnteredNameIsValid(false);\n\t\t\treturn;\n\t\t}\n\t};\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === \"\") {\n\t\t\tsetEnteredNameIsValid(false);\n\t\t\treturn;\n\t\t}\n\n  }\n\n\tconst formSubmissionHandler = event => {\n\t\tevent.preventDefault();\n\n    setEnteredNameTouched(true);\n\n\t\tif (enteredName.trim() === \"\") {\n\t\t\tsetEnteredNameIsValid(false);\n\t\t\treturn;\n\t\t}\n\n\t\tsetEnteredNameIsValid(true);\n\n\t\tconsole.log(enteredName);\n\n\t\tconst enteredValue = nameInputRef.current.value;\n\t\tconsole.log(enteredValue);\n\t\tnameInputRef.current.value = \"\";\n\t\tsetEnteredName(\"\");\n\t};\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n\tconst nameInputClasses = !nameInputIsInvalid\n\t\t? \"form-control\"\n\t\t: \"form-control invalid\";\n\n\treturn (\n\t\t<form onSubmit={formSubmissionHandler}>\n\t\t\t<div className={nameInputClasses}>\n\t\t\t\t<label htmlFor=\"name\">Your Name</label>\n\t\t\t\t<input\n\t\t\t\t\tref={nameInputRef}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tid=\"name\"\n\t\t\t\t\tonChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n\t\t\t\t\tvalue={enteredName}\n\t\t\t\t/>\n\t\t\t\t{nameInputIsInvalid && (\n\t\t\t\t\t<p className=\"error-text\">Name must not be empty.</p>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className=\"form-actions\">\n\t\t\t\t<button>Submit</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}